{"version":3,"file":"u-picker.js","sources":["uni_modules/uview-plus/components/u-picker/u-picker.vue","../../Hbuilder/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovdW5pLWFwcOmhueebri9saXVsaXV6aHVhL3VuaV9tb2R1bGVzL3V2aWV3LXBsdXMvY29tcG9uZW50cy91LXBpY2tlci91LXBpY2tlci52dWU"],"sourcesContent":["<template>\n    <view class=\"u-picker-wraper\">\n\t\t<view v-if=\"hasInput\" class=\"u-picker-input cursor-pointer\" @click=\"onShowByClickInput\">\n\t\t\t<slot :value=\"inputLabel\">\n\t\t\t</slot>\n\t\t\t<slot name=\"trigger\" :value=\"inputLabel\">\n\t\t\t</slot>\n\t\t\t<up-input\n\t\t\t\tv-if=\"!$slots['default'] && !$slots['$default'] && !$slots['trigger']\"\n\t\t\t\t:readonly=\"true\"\n\t\t\t\tv-model=\"inputLabel\"\n\t\t\t\tv-bind=\"inputPropsInner\">\n\t\t\t</up-input>\n\t\t\t<view class=\"input-cover\"></view>\n\t\t</view>\n\t\t<u-popup\n\t\t\t:show=\"show || (hasInput && showByClickInput)\"\n\t\t\t:mode=\"popupMode\"\n\t\t\t:zIndex=\"zIndex\"\n\t\t\t:bgColor=\"bgColor\"\n\t\t\t:round=\"round\"\n\t\t\t:duration=\"duration\"\n\t\t\t:pageInline=\"pageInline\"\n\t\t\t:overlayOpacity=\"overlayOpacity\"\n\t\t\t@close=\"closeHandler\"\n\t\t>\n\t\t\t<view class=\"u-picker\">\n\t\t\t\t<u-toolbar\n\t\t\t\t\tv-if=\"showToolbar\"\n\t\t\t\t\t:cancelColor=\"cancelColor\"\n\t\t\t\t\t:confirmColor=\"confirmColor\"\n\t\t\t\t\t:cancelText=\"cancelText\"\n\t\t\t\t\t:confirmText=\"confirmText\"\n\t\t\t\t\t:title=\"title\"\n\t\t\t\t\t:rightSlot=\"toolbarRightSlot ? true : false\"\n\t\t\t\t\t@cancel=\"cancel\"\n\t\t\t\t\t@confirm=\"confirm\"\n\t\t\t\t>\n\t\t\t\t\t<template #right>\n\t\t\t\t\t\t<slot name=\"toolbar-right\"></slot>\n\t\t\t\t\t</template>\n\t\t\t\t</u-toolbar>\n\t\t\t\t<slot name=\"toolbar-bottom\"></slot>\n\t\t\t\t<picker-view\n\t\t\t\t\tclass=\"u-picker__view\"\n\t\t\t\t\t:indicatorStyle=\"`height: ${addUnit(itemHeight, 'px')}`\"\n\t\t\t\t\t:value=\"innerIndex\"\n\t\t\t\t\t:immediateChange=\"immediateChange\"\n\t\t\t\t\t:style=\"{\n\t\t\t\t\t\theight: `${addUnit(visibleItemCount * itemHeight, 'px')}`\n\t\t\t\t\t}\"\n\t\t\t\t\t@change=\"changeHandler\"\n\t\t\t\t>\n\t\t\t\t\t<picker-view-column\n\t\t\t\t\t\tv-for=\"(item, index) in innerColumns\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\tclass=\"u-picker__view__column\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<view\n\t\t\t\t\t\t\tv-if=\"testArray(item)\"\n\t\t\t\t\t\t\tclass=\"u-picker__view__column__item u-line-1\"\n\t\t\t\t\t\t\t:class=\"[index1 === innerIndex[index] && 'u-picker__view__column__item--selected']\"\n\t\t\t\t\t\t\tv-for=\"(item1, index1) in item\"\n\t\t\t\t\t\t\t:key=\"index1\"\n\t\t\t\t\t\t\t:style=\"{\n\t\t\t\t\t\t\t\theight: addUnit(itemHeight, 'px'),\n\t\t\t\t\t\t\t\tlineHeight: addUnit(itemHeight, 'px'),\n\t\t\t\t\t\t\t\tfontWeight: index1 === innerIndex[index] ? 'bold' : 'normal',\n\t\t\t\t\t\t\t\tdisplay: 'block'\n\t\t\t\t\t\t\t}\"\n\t\t\t\t\t\t>{{ getItemText(item1) }}</view>\n\t\t\t\t\t</picker-view-column>\n\t\t\t\t</picker-view>\n\t\t\t\t<view\n\t\t\t\t\tv-if=\"loading\"\n\t\t\t\t\tclass=\"u-picker--loading\"\n\t\t\t\t>\n\t\t\t\t\t<u-loading-icon mode=\"circle\"></u-loading-icon>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</u-popup>\n    </view>\n</template>\n\n<script>\n/**\n * u-picker\n * @description 选择器\n * @property {Boolean}\t\t\tshow\t\t\t\t是否显示picker弹窗（默认 false ）\n * @property {Boolean}\t\t\tshowToolbar\t\t\t是否显示顶部的操作栏（默认 true ）\n * @property {String}\t\t\ttitle\t\t\t\t顶部标题\n * @property {Array}\t\t\tcolumns\t\t\t\t对象数组，设置每一列的数据\n * @property {Boolean}\t\t\tloading\t\t\t\t是否显示加载中状态（默认 false ）\n * @property {String | Number}\titemHeight\t\t\t各列中，单个选项的高度（默认 44 ）\n * @property {String}\t\t\tcancelText\t\t\t取消按钮的文字（默认 '取消' ）\n * @property {String}\t\t\tconfirmText\t\t\t确认按钮的文字（默认 '确定' ）\n * @property {String}\t\t\tcancelColor\t\t\t取消按钮的颜色（默认 '#909193' ）\n * @property {String}\t\t\tconfirmColor\t\t确认按钮的颜色（默认 '#3c9cff' ）\n * @property {String | Number}\tvisibleItemCount\t每列中可见选项的数量（默认 5 ）\n * @property {String}\t\t\tkeyName\t\t\t\t选项对象中，需要展示的属性键名（默认 'text' ）\n * @property {Boolean}\t\t\tcloseOnClickOverlay\t是否允许点击遮罩关闭选择器（默认 false ）\n * @property {Array}\t\t\tdefaultIndex\t\t各列的默认索引\n * @property {Boolean}\t\t\timmediateChange\t\t是否在手指松开时立即触发change事件（默认 true ）\n * @property {String | Number}\tround\t\t\t\t圆角值（默认 0）\n * @property {String }\t        bgColor\t\t\t\t背景色值（默认 '' ）\n * @property {String | Number}\tduration\t\t\t动画时长，单位ms （默认 300 ）\n * @property {String | Number}\toverlayDuration\t\t遮罩层动画时长，单位ms （默认 350 ）\n * @event {Function} close\t\t关闭选择器时触发\n * @event {Function} cancel\t\t点击取消按钮触发\n * @event {Function} change\t\t当选择值变化时触发\n * @event {Function} confirm\t点击确定按钮，返回当前选择的值\n */\nimport { props } from './props';\nimport { mpMixin } from '../../libs/mixin/mpMixin';\nimport { mixin } from '../../libs/mixin/mixin';\nimport { addUnit, deepClone, sleep } from '../../libs/function/index';\nimport test from '../../libs/function/test';\nexport default {\n\tname: 'u-picker',\n\tmixins: [mpMixin, mixin, props],\n\tdata() {\n\t\treturn {\n\t\t\t// 上一次选择的列索引\n\t\t\tlastIndex: [],\n\t\t\t// 索引值 ，对应picker-view的value\n\t\t\tinnerIndex: [],\n\t\t\t// 各列的值\n\t\t\tinnerColumns: [],\n\t\t\t// 上一次的变化列索引\n\t\t\tcolumnIndex: 0,\n            showByClickInput: false,\n\t\t\tcurrentActiveValue: [] //当前用户选中，但是还没确认的值，用户没做change操作时候，点击确认可以默认选中第一个\n\t\t}\n\t},\n\twatch: {\n\t\t// 监听columns参数的变化\n\t\tcolumns: {\n\t\t\timmediate: true,\n\t\t\tdeep:true,\n\t\t\thandler(n) {\n\t\t\t\tthis.setColumns(n)\n\t\t\t}\n\t\t},\n\t\t// 监听默认索引的变化，重新设置对应的值\n\t\tdefaultIndex: {\n\t\t\timmediate: true,\n\t\t\tdeep:true,\n\t\t\thandler(n,o) {\n\t\t\t\t// 修复uniapp调用子组件直接:defaultIndex=\"[0]\"这样写\n\t\t\t\t// v-model的值变化时候导致defaultIndexwatch也会执行的问题\n\t\t\t\t//单纯vue不会出现\n\t\t\t\tif (!o || n.join(\"/\") != o.join(\"/\")) {\n\t\t\t\t\tthis.setIndexs(n, true)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmodelValue: {\n\t\t\timmediate: true,\n\t\t\tdeep:true,\n\t\t\thandler(n,o) {\n\t\t\t\t// 修复uniapp调用子组件直接:defaultIndex=\"[0]\"这样写\n\t\t\t\t// v-model的值变化时候导致defaultIndexwatch也会执行的问题\n\t\t\t\t//单纯vue不会出现\n\t\t\t\tif (!o || n.join(\"/\") != o.join(\"/\")) {\n\t\t\t\t\tlet arr = [];\n\t\t\t\t\tif (n != null) {\n\t\t\t\t\t\tn.forEach((element, index) => {\n\t\t\t\t\t\t\tlet currentCols = this.getColumnValues(index)\n\t\t\t\t\t\t\tif (currentCols && Object.prototype.toString.call(currentCols) === '[object Object]') {\n\t\t\t\t\t\t\t\tcurrentCols.forEach((item, index2) => {\n\t\t\t\t\t\t\t\t\tif (item[this.keyName] == element) {\n\t\t\t\t\t\t\t\t\t\tarr.push(index2)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentCols.forEach((item, index2) => {\n\t\t\t\t\t\t\t\t\tif (item == element) {\n\t\t\t\t\t\t\t\t\t\tarr.push(index2)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// alert(arr)\n\t\t\t\t\t\tif (arr.length == 0 && this.defaultIndex) {\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setIndexs(arr, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\temits: ['close', 'cancel', 'confirm', 'change', 'update:modelValue', 'update:show'],\n    computed: {\n\t\t// input的props\n\t\tinputPropsInner() {\n\t\t\treturn {\n\t\t\t\tborder: this.inputBorder,\n\t\t\t\tplaceholder: this.placeholder,\n\t\t\t\tdisabled: this.disabled,\n\t\t\t\tdisabledColor: this.disabledColor,\n\t\t\t\t...this.inputProps\n\t\t\t}\n\t\t},\n\t\t//已选&&已确认的值显示在input上面的文案\n\t\tinputLabel() {\n\t\t\tlet firstItem = this.innerColumns[0] && this.innerColumns[0][0];\n\t\t\t// //区分是不是对象数组\n\t\t\tif (firstItem && Object.prototype.toString.call(firstItem) === '[object Object]') {\n\t\t\t\tlet res = this.innerColumns[0].filter(item => this.modelValue.includes(item['id']))\n\t\t\t\tres = res.map(item => item[this.keyName]);\n\t\t\t\treturn res.join(\"/\");\n\n\t\t\t} else {\n\t\t\t\t//用户确定的值，才显示到输入框\n\t\t\t\treturn this.modelValue.join(\"/\");\n\t\t\t}\n\t\t},\n\t\t//已选，待确认的值\n\t\tinputValue() {\n\t\t\tlet items = this.innerColumns.map((item, index) => item[this.innerIndex[index]])\n\t\t\tlet res = []\n\t\t\t//区分是不是对象数组\n\t\t\tif (items[0] && Object.prototype.toString.call(items[0]) === '[object Object]') {\n\t\t\t\t//对象数组返回属性值集合\n\t\t\t\titems.forEach(element => {\n\t\t\t\t\tres.push(element && element[this.valueName])\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//非对象数组返回元素集合\n\t\t\t\titems.forEach((element, index) => {\n\t\t\t\t\tres.push(element)\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn res\n\t\t}\n    },\n\tmethods: {\n\t\taddUnit,\n\t\ttestArray: test.array,\n\t\tonShowByClickInput(){\n\t\t\tif(!this.disabled){\n\t\t\t\tthis.showByClickInput=!this.showByClickInput;\n\t\t\t}\n\t\t},\n\t\t// 获取item需要显示的文字，判别为对象还是文本\n\t\tgetItemText(item) {\n\t\t\tif (test.object(item)) {\n\t\t\t\treturn item[this.keyName]\n\t\t\t} else {\n\t\t\t\treturn item\n\t\t\t}\n\t\t},\n\t\t// 关闭选择器\n\t\tcloseHandler() {\n\t\t\tif (this.closeOnClickOverlay) {\n                if (this.hasInput) {\n                    this.showByClickInput = false\n                }\n\t\t\t\tthis.setDefault()\n\t\t\t\tthis.$emit('update:show', false)\n\t\t\t\tthis.$emit('close')\n\t\t\t}\n\t\t},\n\t\t// 点击工具栏的取消按钮\n\t\tcancel() {\n            if (this.hasInput) {\n                this.showByClickInput = false\n            }\n\t\t\tthis.setDefault()\n\t\t\tthis.$emit('update:show', false)\n\t\t\tthis.$emit('cancel')\n\t\t},\n\t\tsetDefault() {\n\t\t\tlet arr = [0]\n\t\t\tif (this.lastIndex.length == 0) {\n\t\t\t\t//如果有默认值&&默认值的数组长度是正确的，就用默认值\n\t\t\t\tif (Array.isArray(this.defaultIndex) && this.defaultIndex.length == this.innerColumns.length) {\n\t\t\t\t\tarr = [...this.defaultIndex];\n\t\t\t\t} else {\n\t\t\t\t\t//否则默认都选中第一个\n\t\t\t\t\tarr = Array(this.innerColumns.length).fill(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr = deepClone(this.lastIndex)\n\t\t\t}\n\t\t\tthis.setLastIndex(arr)\n\t\t\tthis.setIndexs(arr)\n\t\t},\n\t\t// 点击工具栏的确定按钮\n\t\tconfirm() {\n\t\t\t// 如果用户有没有触发过change\n\t\t\tif (!this.currentActiveValue.length) {\n\t\t\t\tthis.setDefault()\n\t\t\t}\n            this.$emit('update:modelValue', this.inputValue)\n            if (this.hasInput) {\n                this.showByClickInput = false\n            }\n\t\t\tthis.setLastIndex(this.innerIndex)\n\t\t\tthis.$emit('update:show', false)\n\t\t\tthis.$emit('confirm', {\n\t\t\t\tindexs: this.innerIndex,\n\t\t\t\tvalue: this.innerColumns.map((item, index) => item[this.innerIndex[index]]),\n\t\t\t\tvalues: this.innerColumns\n\t\t\t})\n\t\t},\n\t\t// 选择器某一列的数据发生变化时触发\n\t\tchangeHandler(e) {\n\t\t\tconst {\n\t\t\t\tvalue\n\t\t\t} = e.detail\n\t\t\tlet index = 0,\n\t\t\t\tcolumnIndex = 0\n\t\t\t//记录用户选中但是还没确认的值\n\t\t\tthis.currentActiveValue = value;\t\n\t\t\t// 通过对比前后两次的列索引，得出当前变化的是哪一列\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tlet item = value[i]\n\t\t\t\tif (item !== (this.lastIndex[i] || 0)) { // 把undefined转为合法假值0\n\t\t\t\t\t// 设置columnIndex为当前变化列的索引\n\t\t\t\t\tcolumnIndex = i\n\t\t\t\t\t// index则为变化列中的变化项的索引\n\t\t\t\t\tindex = item\n\t\t\t\t\tbreak // 终止循环，即使少一次循环，也是性能的提升\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.columnIndex = columnIndex\n\t\t\tconst values = this.innerColumns\n\t\t\t// 将当前的各项变化索引，设置为\"上一次\"的索引变化值\n\t\t\t// this.setLastIndex(value)\n\t\t\tthis.setIndexs(value)\n\t\t\t//如果是非自带输入框才会在change时候触发v-model绑值的变化\n\t\t\t//否则会非常的奇怪，用户未确认，值就变了\n\t\t\t// if (!this.hasInput) {\n\t\t\t// \tthis.$emit('update:modelValue', this.inputValue)\n\t\t\t// }\n\t\t\t\n\t\t\tthis.$emit('change', {\n\t\t\t\t// #ifndef MP-WEIXIN || MP-LARK\n\t\t\t\t// 微信小程序不能传递this，会因为循环引用而报错\n\t\t\t\t// picker: this,\n\t\t\t\t// #endif\n\t\t\t\tvalue: this.innerColumns.map((item, index) => item[value[index]]),\n\t\t\t\tindex,\n\t\t\t\tindexs: value,\n\t\t\t\t// values为当前变化列的数组内容\n\t\t\t\tvalues,\n\t\t\t\tcolumnIndex\n\t\t\t})\n\t\t},\n\t\t// 设置index索引，此方法可被外部调用设置\n\t\tsetIndexs(index, setLastIndex) {\n\t\t\tthis.innerIndex = deepClone(index)\n\t\t\tif (setLastIndex) {\n\t\t\t\tthis.setLastIndex(index)\n\t\t\t}\n\t\t},\n\t\t// 记录上一次的各列索引位置\n\t\tsetLastIndex(index) {\n\t\t\t// 当能进入此方法，意味着当前设置的各列默认索引，即为“上一次”的选中值，需要记录，是因为changeHandler中\n\t\t\t// 需要拿前后的变化值进行对比，得出当前发生改变的是哪一列\n\t\t\tthis.lastIndex = deepClone(index)\n\t\t},\n\t\t// 设置对应列选项的所有值\n\t\tsetColumnValues(columnIndex, values) {\n\t\t\t// 替换innerColumns数组中columnIndex索引的值为values，使用的是数组的splice方法\n\t\t\tthis.innerColumns.splice(columnIndex, 1, values)\n            // 替换完成之后将修改列之后的已选值置空\n\t\t\tthis.setLastIndex(this.innerIndex.slice(0, columnIndex))\n\t\t\t// 拷贝一份原有的innerIndex做临时变量，将大于当前变化列的所有的列的默认索引设置为0\n\t\t\tlet tmpIndex = deepClone(this.innerIndex)\n\t\t\tfor (let i = 0; i < this.innerColumns.length; i++) {\n\t\t\t\tif (i > this.columnIndex) {\n\t\t\t\t\ttmpIndex[i] = 0\n\t\t\t\t}\n\t\t\t}\n\t\t\t// 一次性赋值，不能单个修改，否则无效\n\t\t\tthis.setIndexs(tmpIndex)\n\t\t},\n\t\t// 获取对应列的所有选项\n\t\tgetColumnValues(columnIndex) {\n\t\t\t// 进行同步阻塞，因为外部得到change事件之后，可能需要执行setColumnValues更新列的值\n\t\t\t// 索引如果在外部change的回调中调用getColumnValues的话，可能无法得到变更后的列值，这里进行一定延时，保证值的准确性\n\t\t\t(async () => {\n\t\t\t\tawait sleep()\n\t\t\t})()\n\t\t\treturn this.innerColumns[columnIndex]\n\t\t},\n\t\t// 设置整体各列的columns的值\n\t\tsetColumns(columns) {\n\t\t\t// console.log(columns)\n\t\t\tthis.innerColumns = deepClone(columns)\n\t\t\t// 如果在设置各列数据时，没有被设置默认的各列索引defaultIndex，那么用0去填充它，数组长度为列的数量\n\t\t\tif (this.innerIndex.length === 0) {\n\t\t\t\tthis.innerIndex = new Array(columns.length).fill(0)\n\t\t\t}\n\t\t},\n\t\t// 获取各列选中值对应的索引\n\t\tgetIndexs() {\n\t\t\treturn this.innerIndex\n\t\t},\n\t\t// 获取各列选中的值\n\t\tgetValues() {\n\t\t\t// 进行同步阻塞，因为外部得到change事件之后，可能需要执行setColumnValues更新列的值\n\t\t\t// 索引如果在外部change的回调中调用getValues的话，可能无法得到变更后的列值，这里进行一定延时，保证值的准确性\n\t\t\t(async () => {\n\t\t\t\tawait sleep()\n\t\t\t})()\n\t\t\treturn this.innerColumns.map((item, index) => item[this.innerIndex[index]])\n\t\t}\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n\t.u-picker {\n\t\tposition: relative;\n\t\t&-input {\n\t\t\tposition: relative;\n\t\t\t.input-cover {\n\t\t\t\topacity: 0;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t\tz-index:1;\n\t\t\t}\n\t\t}\n\t\t&__view {\n\n\t\t\t&__column {\n\t\t\t\t@include flex;\n\t\t\t\tflex: 1;\n\t\t\t\tjustify-content: center;\n\n\t\t\t\t&__item {\n\t\t\t\t\t@include flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\t/* #ifndef APP-NVUE */\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\t/* #endif */\n\t\t\t\t\tcolor: $u-main-color;\n\n\t\t\t\t\t&--disabled {\n\t\t\t\t\t\t/* #ifndef APP-NVUE */\n\t\t\t\t\t\tcursor: not-allowed;\n\t\t\t\t\t\t/* #endif */\n\t\t\t\t\t\topacity: 0.35;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t&--loading {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tleft: 0;\n\t\t\tbottom: 0;\n\t\t\t@include flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tbackground-color: rgba(255, 255, 255, 0.87);\n\t\t\tz-index: 1000;\n\t\t}\n\t}\n</style>\n","import Component from 'D:/uni-app项目/liuliuzhua/uni_modules/uview-plus/components/u-picker/u-picker.vue'\nwx.createComponent(Component)"],"names":["mpMixin","mixin","props","addUnit","test","deepClone","index","sleep"],"mappings":"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"}